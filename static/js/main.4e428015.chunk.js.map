{"version":3,"sources":["Game.tsx","reportWebVitals.ts","index.tsx"],"names":["Square","useState","isOn","setIsOn","className","onClick","Board","header","Array","fill","map","_","i","String","fromCodePoint","charCodeAt","row","board","Game","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAGA,SAASA,IAAU,IAAD,EACQC,oBAAS,GADjB,mBACTC,EADS,KACHC,EADG,KAGhB,OACE,wBAAQC,UAAU,SAChBC,QAAS,kBAAMF,GAASD,IAD1B,SAEGA,EAAO,IAAM,MAKpB,SAASI,IACP,IACMC,EAASC,MADF,IACcC,KAAK,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OACxC,6BACGC,OAAOC,cAAc,IAAIC,WAAW,GAAKH,QAGxCI,EAAMR,MANC,IAMWC,KAAK,6BAAI,cAACT,EAAD,OAC3BiB,EAAQT,MAPD,IAOaC,KAAK,MAAMC,KAAI,SAACC,EAAGC,GAAJ,OACvC,+BACE,6BAAKA,EAAI,IAAQI,QAIrB,OACE,mCACE,kCACE,gCACE,+BACE,uBAAUT,OAGd,gCACGU,SAuBIC,MAhBf,WACE,OACE,sBAAKd,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACE,EAAD,MAEF,sBAAKF,UAAU,YAAf,UACE,iDACA,gJCtCOe,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e428015.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './Game.css';\r\n\r\nfunction Square() {\r\n  const [isOn, setIsOn] = useState(false);\r\n  \r\n  return (\r\n    <button className=\"square\"\r\n      onClick={() => setIsOn(!isOn)}>\r\n      {isOn ? \"1\" : \"0\"}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Board() {\r\n  const size = 10;\r\n  const header = Array(size).fill(null).map((_, i) =>\r\n    <th>\r\n      {String.fromCodePoint('A'.charCodeAt(0) + i)}\r\n    </th>\r\n  );\r\n  const row = Array(size).fill(<td><Square /></td>);\r\n  const board = Array(size).fill(null).map((_, i) =>\r\n    <tr>\r\n      <td>{i + 1}</td>{row}\r\n    </tr>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td></td>{header}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {board}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Game() {\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">\r\n        <Board />\r\n      </div>\r\n      <div className=\"game-info\">\r\n        <h1>Battleship Game</h1>\r\n        <p>\r\n          マスをクリックすると0と1が切り替わる\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}